pipeline {
    agent any
    parameters {
        string(name: 'url', description: 'Enter the required url')
    }
    
    stages {
        
        
        stage('Clone Repository') {
            steps {
                script {
                   git branch: 'main', credentialsId: 'Github', url: 'git@github.com:omeshvalyal/Encrypted-Package.git'
                }
            }
        }
        stage('Generate Package URL') {
    steps {
        script {
            // Your Python script to generate the package URL
            def packageUrl = sh(script: "python3 ${WORKSPACE}/trigger2.py ${params.url}", returnStdout: true).trim()
            env.PACKAGE_URL = packageUrl
            echo "Package URL: ${env.PACKAGE_URL}"
            }
        }
    }
       stage('Download Package and Generate SHA512') {
    steps {
        script {
            // Download the package using the correct environment variable
            def downloadPack = sh(script: "wget ${env.PACKAGE_URL} -P ${WORKSPACE}", returnStdout: true).trim()
            // Calculate SHA512 sum
            def sha512sum = sh(script: "sha512sum ${downloadPack}", returnStdout: true).split()[0]
            env.SHA512_SUM = sha512sum
            echo "SHA512 Sum: ${env.SHA512_SUM}"
               }
            }
        }
        stage('Generate Random Password') {
            steps {
                script {
                    def randomPassword = sh(script: 'pwgen -1 12', returnStdout: true).trim()
                    echo "Random Password: ${randomPassword}"
                }
            }
        }
        stage('Create Word File') {
        steps {
            script {
                // Create a markdown file with package information
                writeFile file: "${WORKSPACE}/package_info.md", text: """
                    # Package Information

                    **Package URL:** ${env.PACKAGE_URL}
                    **SHA512 Sum:** ${env.SHA512_SUM}
                """
                // Convert markdown to Word using Pandoc
                sh "pandoc ${WORKSPACE}/package_info.md -o ${WORKSPACE}/link.docx"
               }
            }
        }
    }
}

/*
        stage('Create Word Document') {
            steps {
                script {
                    // Create Word document with URL and SHA512 sum
                    // You can use tools like pandoc or other methods to create a Word document
                }
            }
        }

        stage('Zip and Encrypt Document') {
            steps {
                script {
                    // Create a random password
                    def randomPassword = sh(script: 'openssl rand -base64 12', returnStdout: true).trim()

                    // Zip and encrypt the Word document
                    sh "zip -P ${randomPassword} ${WORKSPACE}/encrypted_document.zip ${WORKSPACE}/word_document.docx"
                }
            }
        }

        stage('Send Email') {
            steps {
                script {
                    // Send encrypted document and password to the specified email
                    mail to: 'orvalyal@gmail.com',
                         subject: 'Encrypted Document',
                         body: "Please find the encrypted document attached.\nPassword: ${randomPassword}",
                         attachmentsPattern: "${WORKSPACE}/encrypted_document.zip"
                }
            }
        }
*/
